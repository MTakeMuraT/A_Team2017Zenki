・要件
挟まれる処理、判定

・やり方
２体の座標の内側にいたら挟まれる判定を始める

・プレイヤー間にエネミーがいるか判定式比較(判定A1と記載)
変換してから計算(Aと記載)より
変換せずに条件網羅(Bと記載)したほうが1.5倍早い

しかし、距離(三平方の定理で計算)の判定を行った場合
AとBでは約15倍の差が出た
absの変換が直打ちの変換より約15倍程重いようだ

・仕様
そもそもの判定を動作を軽くする目的で以下条件とする
「２体の間の距離が要件定義で定義したエネミーの最大の大きさ以下」
判定条件を満たした場合次の判定を行う
「エネミー(ミサイル子機含む)全部が判定A1にひっかかるか判定」
「引っかかったものはその場で挟んでるかを距離で判定、/*被っていれば最大の物を保存*/」
*被ることがまずないはずなので今回は除外する
「挟んでた場合、挟んでるエネミーに応じたアクション(子機のみだが…)を実行」
「プレイヤー側にも離れる処理を実行させる」

以上

・前提条件
エネミーは(子機を含め)一つのシェアグループに入れる[名前は:AllEnemyGroup]
エネミー側で挟まれた処理の関数を用意する
プレイヤー側に挟んだ後離れる処理の関数を用意する
もしはさむ前にプレイヤーの片方がエネミーに当たった場合は移動を停止させる、そのため"別途アタリ判定が必須"

備考
このアタリ判定は処理の速さを最優先としている。
アクションゲームにおける遅延、処理落ちを最大限予防するためである。
そのためコードの可読性は皆無、他人が読めるコードになるとは到底思えない。
つまりコードをうった本人が責任をもってバグ修正を行う必要がある。
そのことは心得るように



